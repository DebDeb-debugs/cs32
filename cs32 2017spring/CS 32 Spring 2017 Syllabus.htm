<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0058)http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>CS 32 Spring 2017 Syllabus</title>
</head>
<body>
<div style="text-align: center">
<h2>CS 32: Introduction to Computer Science II</h2>
<h3>
Computer Science Department<br>
University of California, Los Angeles<br>
Spring 2017
</h3>
<h2>SYLLABUS</h2>
</div>
<table align="center">
<colgroup width="60%"></colgroup>
<colgroup></colgroup>
<tbody><tr><td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#objectives">Course Objectives</a></td>
  <td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#lectures">Lecture and Discussion Sections</a></td></tr>
<tr><td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#website">Course Website</a></td>
  <td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#projects">Programming Projects and Homeworks</a></td></tr>
<tr><td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#sections">Instructors and Class Meetings</a></td>
  <td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#exams">Examinations</a></td></tr>
<tr><td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#schedule">Schedule of Lecture Topics and Exams</a></td>
  <td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#grading">Grading</a></td></tr>
<tr><td><a href="http://web.cs.ucla.edu/classes/spring17/cs32/syllabus.html#textbook">Textbook</a></td>
  <td></td></tr>
</tbody></table>
<h3><a id="objectives"></a>Course Objectives</h3>
<p>
In this course, you will learn how to employ data abstraction to build programs
larger than those you constructed in CS 31.  You will learn how to use a
variety of data structures in the course of solving problems, and importantly,
how to analyze what data structures and algorithms are most appropriate for a
given problem.  In addition, you will deepen your understanding of modern
programming by learning the principles of object-oriented and generic
programming.
</p>
<h3><a id="website"></a>Course Website</h3>
<p>
The URL for the course website is
<a href="http://cs.ucla.edu/classes/spring17/cs32/" target="_top">
http://cs.ucla.edu/classes/spring17/cs32</a>.  You must check the site for
announcements at least every other weekday.  You must also check your email as
regularly.
</p>
<h3><a id="sections"></a>Instructor and Class Meetings</h3>
<div style="text-align: center">
<table border="1" cellpadding="3" width="85%" align="center">
<colgroup span="4" width="25%" align="center">
</colgroup>
<tbody><tr>
<td colspan="4"><b>Lecture 1</b><br>MW 12-1:50<br>Dodd 147<br>David Smallberg<br><font size="-1"><a href="mailto:das@cs.ucla.edu">das@cs.ucla.edu</a></font></td>
</tr>
<tr>
<td><b>Discussion 1A</b><br>F 10-11:50<br>Humanities A65<br>Yiming Wang<br><font size="-1"><a href="mailto:ywang311@ucla.edu">ywang311@ucla.edu</a></font></td>
<td><b>Discussion 1C</b><br>F 12-1:50<br>Boelter 5272<br>Josh Joy<br><font size="-1"><a href="mailto:jjoy@cs.ucla.edu">jjoy@cs.ucla.edu</a></font></td>
<td><b>Discussion 1E</b><br>F 12-1:50<br>Dodd 175<br>Muhao Chen<br><font size="-1"><a href="mailto:muhaochen@ucla.edu">muhaochen@ucla.edu</a></font></td>
<td><b>Discussion 1G</b><br>F 12-1:50<br>Haines A44<br>Noor Abani<br><font size="-1"><a href="mailto:noorabani@ucla.edu">noorabani@ucla.edu</a></font></td>
</tr>
<tr>
<td><b>Discussion 1B</b><br>F 10-11:50<br>Boelter 5419<br>Masaki Nakada<br><font size="-1"><a href="mailto:nakadam1@gmail.com">nakadam1@gmail.com</a></font></td>
<td><b>Discussion 1D</b><br>F 12-1:50<br>Dodd 167<br>Tao Zhou<br><font size="-1"><a href="mailto:tao.zhou.la@cs.ucla.edu">tao.zhou.la@cs.ucla.edu</a></font></td>
<td><b>Discussion 1F</b><br>F 12-1:50<br>Humanities A51<br>Lana Ramjit<br><font size="-1"><a href="mailto:lana@cs.ucla.edu">lana@cs.ucla.edu</a></font></td>
<td><b>&nbsp;</b></td>
</tr>
</tbody></table>
</div>
<p>
<a href="http://web.cs.ucla.edu/classes/spring17/cs32/officehours.html">Office hours</a> for the instructor and the TAs
are on the class web page.
</p>
<h3><a id="schedule"></a>Schedule of Lecture Topics and Exams</h3>
<div align="center">
<table border="1" cellpadding="3" width="80%">
<colgroup span="1" align="center">
</colgroup>
<colgroup span="3">
</colgroup>
<tbody><tr>
<th><b>Week</b></th>
<th><b>Date</b></th>
<th><b>Topics</b></th>
<th><b>Book</b></th>
</tr>
<tr>
<td>1</td>
<td>Apr. &nbsp;&nbsp;3</td>
<td>Introduction, C++ Review</td>
<td>Chapter 1</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. &nbsp;&nbsp;5</td>
<td>Data Abstraction, C++ Classes</td>
<td>Chapter 1</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. &nbsp;&nbsp;7</td>
<td>Pointers, Dynamic Arrays, Resource Management</td>
<td>Chapter 3</td>
</tr>
<tr>
<td>2</td>
<td>Apr. 10</td>
<td>Linked Lists</td>
<td>Chapters 4 and 8</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. 12</td>
<td>Stacks and Queues</td>
<td>Chapters 6, 7, 13, and 14</td>
</tr>
<tr>
<td>3</td>
<td>Apr. 17</td>
<td>Advanced C++, Inheritance, Polymorphism</td>
<td>Chapter 3</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. 19</td>
<td>Inheritance, Polymorphism</td>
<td>Chapter 3</td>
</tr>
<tr>
<td>4</td>
<td>Apr. 24</td>
<td>Object-Oriented Design Principles, Midterm review</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. 26</td>
<td>Recursion</td>
<td>Chapters 2 and 5</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Apr. 26</td>
<td>Midterm exam, part 1 (5:00 to 6:05 or 5:45 to 6:50)</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>5</td>
<td>May &nbsp;&nbsp;1</td>
<td>Recursion</td>
<td>Chapters 2 and 5</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May &nbsp;&nbsp;3</td>
<td>Recursion</td>
<td>Chapters 2 and 5</td>
</tr>
<tr>
<td>6</td>
<td>May &nbsp;&nbsp;8</td>
<td>Templates, Iterators, STL</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May 10</td>
<td>Algorithmic Efficiency, Sorting</td>
<td>Chapters 10 and 11</td>
</tr>
<tr>
<td>7</td>
<td>May 15</td>
<td>Sorting</td>
<td>Chapter 11</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May 17</td>
<td>Trees</td>
<td>Chapter 15</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May 18</td>
<td>Midterm exam, part 2 (5:00 to 6:05 or 5:45 to 6:50)</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>8</td>
<td>May 22</td>
<td>Trees</td>
<td>Chapter 16</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May 24</td>
<td>Tables, Tree-based Tables, Hash Tables</td>
<td>Chapters 18</td>
</tr>
<tr>
<td>9</td>
<td>May 29</td>
<td><i>Memorial Day holiday</i></td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>May 31</td>
<td>Trees and Arrays, Priority Queues, Heaps</td>
<td>Chapter 17</td>
</tr>
<tr>
<td>10</td>
<td>Jun. &nbsp;&nbsp;5</td>
<td>Graphs</td>
<td>Chapter 20</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Jun. &nbsp;&nbsp;7</td>
<td>Review</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>end of 10</td>
<td>Jun. 10 (Sat.)</td>
<td>Final exam, 11:30 AM to 2:30 PM</td>
<td>&nbsp;</td>
</tr>
</tbody></table>
</div>
<h3><a id="textbook"></a>Textbook</h3>
<p>
The course textbook is
<a href="https://www.pearsonhighered.com/program/Carrano-Data-Abstraction-Problem-Solving-with-C-Walls-and-Mirrors-7th-Edition/PGM333670.html" target="_blank">
Data Abstraction and Problem Solving with C++: Walls and Mirrors,
Seventh Edition</a>, by Frank M. Carrano, Pearson, 2017.  The
<a href="http://pearsonhighered.com/educator/academic/product/0,1144,0132923726,00.html" target="_blank">Sixth Edition</a>, the
<a href="http://pearsonhighered.com/educator/academic/product/0,1144,0321433327,00.html" target="_blank">Fifth Edition</a> or even the
<a href="http://www.pearsonhighered.com/educator/academic/product/0,1144,0321247256,00.html" target="_blank">Fourth Edition</a>
is acceptable as well.
</p><p>
Good C++ books we could recommend are <a href="http://acceleratedcpp.com/" target="_blank">Accelerated C++</a>, by Andrew Koenig and Barbara E. Moo,
Addison Wesley, 2000, and
<a href="http://mindviewinc.com/downloads/TICPP-2nd-ed-Vol-one.zip" target="_blank">Thinking in C++, Second Edition</a>, by Bruce Eckel, Addison
Wesley, 2000; the latter book is available online for free.
</p>
<h3><a id="lectures"></a>Lecture and Discussion Sections</h3>
<p>
Lectures will present material from the course textbook, supplemented by
additional subject matter.  You are responsible for <em>all</em> material
presented in <em>all</em> lectures.
</p><p>
In discussion sections, your TA will review material covered in the lectures,
present subject matter not covered in the lectures, discuss homeworks and
programming projects, and answer questions.
</p>
<h3><a id="projects"></a>Programming Projects and Homeworks</h3>
<p>
You cannot learn how to write large programs without writing large
programs.  There will be four programming projects.  Your program
correctness score is based on your program's correctness as determined by
our testing.  The amount of time you spent working on the program is
irrelevant; indeed, if you follow our software development advice, you'll
probably spend less time and get a higher score than if you don't.
</p><p>
Since the projects cannot give you experience with all the material in the
course, there will be five homework assignments in addition to the projects.
These may require you to answer some questions and analyze or write small
programs.  Some of the work you put into the homework will do double duty:
it will help you with a programming project or will serve as a good study
guide for an exam.  If you are seriously interested in mastering the course
material, you will do every homework problem, even though not every problem
of every homework assignment will be graded.  (You won't know which problems
won't be graded.)
</p><p>
Every C++ program you turn in for this class must run successfully using
two compilers, as specified in the
<a href="http://web.cs.ucla.edu/classes/spring17/cs32/requirements.html#compilers">Project Requirements</a> document.
</p><p>
Programming projects and homeworks are due at 11 PM on the dates listed
below.  Late submissions will be penalized by 0.0034722% per second (which
comes to 12.5% per hour), making a submission worthless if submitted after 7
AM the next morning.  The deadlines in our minds for the assignments are
one day before these published deadlines.  The published deadlines aleady
account for extensions due to broken or stolen computers, medical issues,
etc., so we will not be granting further individual extensions.  It is
<em>your</em> responsibility to start early, to make backups to removable
devices or to online storage, and to make the deadlines in our minds the
deadlines in your mind.
</p>
<div align="center">
<table border="1" cellspacing="3" align="center">
<tbody><tr>
<td>Project 1</td>
<td>Tuesday, April 11</td>
</tr>
<tr>
<td>Homework 1</td>
<td>Tuesday, April 18</td>
</tr>
<tr>
<td>Project 2</td>
<td>Tuesday, April 25</td>
</tr>
<tr>
<td>Homework 2</td>
<td>Tuesday, May 2</td>
</tr>
<tr>
<td>Homework 3</td>
<td>Tuesday, May 9</td>
</tr>
<tr>
<td>Project 3</td>
<td><s>Thursday, May 25</s> Tuesday, May 30</td>
</tr>
<tr>
<td>Homework 4</td>
<td>Tuesday, May 30</td>
</tr>
<tr>
<td>Project 4</td>
<td>Thursday, June 8</td>
</tr>
<tr>
<td>Homework 5</td>
<td>Thursday, June 8</td>
</tr>
</tbody></table>
</div>
<h3><a id="exams"></a>Examinations</h3>
<p>
The midterms will cover material from the lectures and the textbook.  The
final examination will cover material from the entire course.  Missing the
final for any reason will result in a final exam score of zero.
</p>
<h3><a id="grading"></a>Grading</h3>
<p>
Your grade in the course will be determined from your total score,
although a final exam score below 40 may subject you to a failing grade
regardless of your total score.  The total score is determined from the
graded materials as follows:
</p>
<table align="center">
<colgroup span="2"></colgroup>
<colgroup align="right"></colgroup>
<tbody><tr><td>Project 1</td><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;1%</td></tr>
<tr><td>Project 2</td><td>&nbsp;&nbsp;&nbsp;</td><td>10%</td></tr>
<tr><td>Project 3</td><td>&nbsp;&nbsp;&nbsp;</td><td>10%</td></tr>
<tr><td>Project 4</td><td>&nbsp;&nbsp;&nbsp;</td><td>10%</td></tr>
<tr><td>Homeworks</td><td>&nbsp;&nbsp;&nbsp;</td><td>19%</td></tr>
<tr><td>Midterm exam</td><td>&nbsp;&nbsp;&nbsp;</td><td>20%</td></tr>
<tr><td>Final exam</td><td>&nbsp;&nbsp;&nbsp;</td><td>30%</td></tr>
</tbody></table>
<p>
The total points you earn from projects and homeworks (scaled to 0 through
100) will be capped at 30 points above the mean of your exam scores
(scaled to 0 through 100). For example, if you average 90 on the
assignments, your midterm score is 60, and your final is 40, then your
assignment average is treated as only 80 (because that's 30 more than the
mean of 60 and 40). In other words, your assignment scores won't count
fully if you can't show from your exam scores that you learned what you
should have from the assignments. 
</p>
<p>
A request for reconsideration of the grading for an item must be made
within one week of our sending you your score for that item.
</p><p>
You will not earn points on any of your coursework unless you have signed
and turned in the <a href="http://web.cs.ucla.edu/classes/spring17/cs32/Docs/agreement.pdf">Academic Integrity
Agreement</a>.
</p>


</body></html>